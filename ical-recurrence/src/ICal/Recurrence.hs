{-# LANGUAGE DeriveGeneric #-}

-- | ICal Recurrence
--
-- This module exists to help you canculate the recurrence set of an event.
--
-- [section 3.8.5](https://datatracker.ietf.org/doc/html/rfc5545#section-3.8.5)
--
-- @
-- The following properties specify recurrence information in calendar
-- components.
-- @
--
-- [section 3.8.5.1](https://datatracker.ietf.org/doc/html/rfc5545#section-3.8.5.1)
--
-- @
-- The recurrence set is the complete
-- set of recurrence instances for a calendar component.  The
-- recurrence set is generated by considering the initial "DTSTART"
-- property along with the "RRULE", "RDATE", and "EXDATE" properties
-- contained within the recurring component.
-- [...]
-- The final recurrence set is generated by gathering all of the
-- start DATE-TIME values generated by any of the specified "RRULE"
-- and "RDATE" properties, and then excluding any start DATE-TIME
-- values specified by "EXDATE" properties.
-- @
--
-- However, because recurrence sets can be infinite, we do not reify
-- them and instead provide only functions that produce finite results.
module ICal.Recurrence where

import Data.Set (Set)
import Data.Time
import Data.Validity
import GHC.Generics (Generic)
import ICal.Property
import ICal.PropertyType

data Recurrence = Recurrence
  { recurrenceExceptionDateTimes :: Set ExceptionDateTimes,
    recurrenceRecurrenceDateTimes :: Set RecurrenceDateTimes,
    recurrenceRecurrenceRules :: Set RecurrenceRule
  }
  deriving (Show, Eq, Generic)

instance Validity Recurrence

data RecurringEvent = RecurringEvent
  { recurringEventStart :: !(Maybe DateTimeStart),
    recurringEventEnd :: !(Maybe (Either DateTimeEnd Duration)),
    recurringEventRecurrence :: !Recurrence
  }
  deriving (Show, Eq, Generic)

instance Validity RecurringEvent

data EventOccurrence = EventOccurrence
  { eventOccurrenceStart :: !(Maybe DateTimeStart),
    eventOccurrenceEnd :: !(Maybe (Either DateTimeEnd Duration))
  }
  deriving (Show, Eq, Ord, Generic)

instance Validity EventOccurrence

recurEvents :: Day -> Day -> RecurringEvent -> Set EventOccurrence
recurEvents begin end = undefined begin end
